#include "helpers/basic_inner_types.idl"

const short const_short = 1;
const unsigned short const_ushort = 1;
const long const_long = 1;
const unsigned long const_ulong = 1;
const long long const_longlong = 1;
const unsigned long long const_ulonglong = 1;
const float const_float = 1.1;
const double const_double = 1.1;
const long double const_longdouble = 1.1;
const boolean const_boolean = true;
const octet const_octet = 1;
const char const_char8 = '1';
const wchar const_char16 = L'1';
const int8 const_int8 = 1;
const uint8 const_uint8 = 1;
const int16 const_int16 = 1;
const uint16 const_uint16 = 1;
const int32 const_int32 = 1;
const uint32 const_uint32 = 1;
const int64 const_int64 = 1;
const uint64 const_uint64 = 1;
const string const_string = "11";
const wstring const_wstring = L"11";

typedef short alias_short;
const alias_short alias_const = 1;


module const_module1
{
    const short const_moduled = 11;
    typedef short alias_short_moduled;
    const alias_short_moduled alias_const_moduled = 1;

    struct ModuleConstsLiteralsStruct
    {
        short module1_array_literal_const_moduled[const_moduled];
        short module1_array_literal_const_alias_const_moduled[alias_const_moduled];
    };
};

module const_module2
{
    const short const_moduled = 22;
    typedef short alias_short_moduled;
    const alias_short_moduled alias_const_moduled = 2;

    struct Module2ConstsLiteralsStruct
    {
        short module2_array_literal_const_moduled[const_moduled];
        short module2_array_literal_const_alias_const_moduled[alias_const_moduled];
    };
};

struct ConstsLiteralsStruct
{
    short array_literal_const_short[const_short];
    unsigned short array_literal_const_ushort[const_ushort];
    long array_literal_const_long[const_long];
    unsigned long array_literal_const_ulong[const_ulong];
    long long array_literal_const_longlong[const_longlong];
    unsigned long long array_literal_const_ulonglong[const_ulonglong];
    float array_literal_const_float[const_float];
    double array_literal_const_double[const_double];
    long double array_literal_const_longdouble[const_longdouble];
    boolean array_literal_const_boolean[const_boolean];
    octet array_literal_const_octet[const_octet];
    char array_literal_const_char8[const_char8];
    wchar array_literal_const_char16[const_char16];
    int8 array_literal_const_int8[const_int8];
    uint8 array_literal_const_uint8[const_uint8];
    int16 array_literal_const_int16[const_int16];
    uint16 array_literal_const_uint16[const_uint16];
    int32 array_literal_const_int32[const_int32];
    uint32 array_literal_const_uint32[const_uint32];
    int64 array_literal_const_int64[const_int64];
    uint64 array_literal_const_uint64[const_uint64];
    string array_literal_const_string[const_string];
    wstring array_literal_const_wstring[const_wstring];

    short array_literal_const_inner_const_helper[inner_const_helper];

    short array_moduled1_literal_const[const_module1::const_moduled];
    short array_moduled2_literal_const[const_module2::const_moduled];

    short array_literal_const_alias_const[alias_const];
    short array_moduled1_literal_alias_const_moduled[const_module1::alias_const_moduled];
    short array_moduled2_literal_alias_const_moduled[const_module2::alias_const_moduled];
};
 
